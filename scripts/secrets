#!/bin/bash

ENV_VARS=(".env" ".registry.env")
for e in ${ENV_VARS[@]}; do
  if [[ -f $e ]]; then
    export $(<$e)
  fi
done

loadsecrets() {
  TMPDATA=secrets.json
  vault kv get -address $VAULT_ADDR -format=json $VAULT_PATH | \
    jq '.data.data' \
    > $TMPDATA
  jq -r '.ENV | to_entries|map("\(.key)=\(.value|tostring)")|.[]' $TMPDATA > .registry.env
  mkdir -p certs
  jq -r '.TLS.CERT' $TMPDATA > certs/cert.pem
  jq -r '.TLS.KEY' $TMPDATA > certs/cert.key
  #rm -r $TMPDATA
}

createsecrets() {
  SECFILE=${1:-"secrets.json"}
  if [[ -f $SECFILE ]]; then
    cat $SECFILE | vault kv put -address $VAULT_ADDR $VAULT_PATH -
  else
    echo $SECFILE does not exist > /dev/stderr
  fi
}

vaultlogin() {
  vault token lookup -address $VAULT_ADDR
  if [[ "$?" -gt 0 ]]; then
    vault login -address $VAULT_ADDR -method=userpass username=$VAULT_USER password=$VAULT_PASS
  fi
}

main() {
  vaultlogin
  case "$1" in
    create) createsecrets $2;;
    load) loadsecrets;;
  esac
}

main "$@"
